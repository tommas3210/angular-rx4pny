import { AfterContentInit, ElementRef, QueryList, TemplateRef } from '@angular/core';
import { DwInputDirective } from './dw-input.directive';
export declare type TInputGroupIconClass = string | string[] | Set<string> | {
    [klass: string]: any;
};
export declare type DwInputGroupSizeType = 'large' | 'default' | 'small';
export declare class DwInputGroupComponent implements AfterContentInit {
    private el;
    private _addOnBefore;
    private _addOnAfter;
    private _prefix;
    private _suffix;
    private _size;
    private _compact;
    private _search;
    isAddOnBeforeString: boolean;
    isAddOnAfterString: boolean;
    isPrefixString: boolean;
    isSuffixString: boolean;
    dwInputDirectiveQueryList: QueryList<DwInputDirective>;
    dwAddOnBeforeIcon: TInputGroupIconClass;
    dwAddOnAfterIcon: TInputGroupIconClass;
    dwPrefixIcon: TInputGroupIconClass;
    dwSuffixIcon: TInputGroupIconClass;
    dwSize: DwInputGroupSizeType;
    dwCompact: boolean;
    dwAddOnBefore: string | TemplateRef<void>;
    dwAddOnAfter: string | TemplateRef<void>;
    dwPrefix: string | TemplateRef<void>;
    dwSuffix: string | TemplateRef<void>;
    dwSearch: boolean;
    readonly isLarge: boolean;
    readonly isSmall: boolean;
    readonly isAffix: boolean;
    readonly isAffixWrapper: boolean;
    readonly isAddOn: boolean;
    readonly isGroup: boolean;
    readonly isLargeGroup: boolean;
    readonly isLargeGroupWrapper: boolean;
    readonly isLargeAffix: boolean;
    readonly isLargeSearch: boolean;
    readonly isSmallGroup: boolean;
    readonly isSmallAffix: boolean;
    readonly isSmallGroupWrapper: boolean;
    readonly isSmallSearch: boolean;
    updateChildrenInputSize(): void;
    constructor(el: ElementRef);
    ngAfterContentInit(): void;
}
